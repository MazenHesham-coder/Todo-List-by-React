{"version":3,"sources":["Components/Form.js","Components/Todo.js","Components/TodoList.js","App.js","index.js"],"names":["Form","inputText","setInputText","todos","setTodos","value","onChange","e","console","log","target","type","className","onClick","preventDefault","text","completed","id","Math","random","name","Todo","todo","map","item","filter","el","TodoList","App","useState","ReactDOM","render","StrictMode","document","getElementById"],"mappings":"yOAuCeA,EArCF,SAAC,GAAgD,IAA/CC,EAA8C,EAA9CA,UAAUC,EAAoC,EAApCA,aAAcC,EAAsB,EAAtBA,MAAOC,EAAe,EAAfA,SAa1C,OACA,iCAEE,uBAAOC,MAAOJ,EAAWK,SAfF,SAACC,GACtBC,QAAQC,IAAIF,EAAEG,OAAOL,OACrBH,EAAaK,EAAEG,OAAOL,QAa6BM,KAAK,OAAOC,UAAU,eAE3E,wBAAQC,QAZgB,SAACN,GACvBA,EAAEO,iBACFV,EAAS,GAAD,mBACDD,GADC,CACM,CAACY,KAAMd,EAAWe,WAAW,EAAOC,GAAkB,IAAdC,KAAKC,aAE3DjB,EAAa,KAOqBU,UAAU,cAAcD,KAAK,SAAjE,SACE,mBAAGC,UAAU,yBAGf,qBAAKA,UAAU,SAAf,SAEE,yBAAQQ,KAAK,QAAQR,UAAU,cAA/B,UACE,wBAAQP,MAAM,MAAd,iBACA,wBAAQA,MAAM,YAAd,uBACA,wBAAQA,MAAM,cAAd,kC,OCWKgB,EAtCF,SAAC,GAAkC,IAAjCN,EAAgC,EAAhCA,KAAKO,EAA2B,EAA3BA,KAAMnB,EAAqB,EAArBA,MAAOC,EAAc,EAAdA,SAkB7B,OAEI,sBAAKQ,UAAW,OAAhB,UAEI,oBAAIA,UAAY,YAAhB,SACKG,IAGL,wBAAQF,QArBQ,WACpBT,EACID,EAAMoB,KAAI,SAACC,GACP,OAAGA,EAAKP,KAAOK,EAAKL,GAChB,2BACOO,GADP,IAEIR,WAAYQ,EAAKR,YAGlBQ,OAYuBZ,UAAU,eAA5C,SACI,mBAAGA,UAAW,mBAGlB,wBAAQC,QA7BM,WAClBT,EAASD,EAAMsB,QAAO,SAACC,GAAD,OAAMA,EAAGT,KAAOK,EAAKL,QA4BLL,UAAU,YAA5C,SACI,mBAAGA,UAAW,uBCPfe,EAvBE,SAAC,GAAuB,IAAtBxB,EAAqB,EAArBA,MAAOC,EAAc,EAAdA,SAEtB,OAEI,qBAAKQ,UAAU,iBAAf,SAEI,oBAAIA,UAAU,YAAd,SACKT,EAAMoB,KAAI,SAACD,GACT,OAAO,cAAC,EAAD,CAEPP,KAAOO,EAAKP,KACZX,SAAYA,EACZD,MAASA,EACTmB,KAAQA,GAJDA,EAAKL,YCOhBW,MAdf,WAAgB,IAAD,EACqBC,mBAAS,IAD9B,mBACN5B,EADM,KACKC,EADL,OAEa2B,mBAAS,IAFtB,mBAEN1B,EAFM,KAECC,EAFD,KAGb,OACE,sBAAKQ,UAAU,MAAf,UACE,iCACE,8CAEF,cAAC,EAAD,CAAMX,UAAWA,EAAWC,aAAeA,EAAcC,MAAOA,EAAOC,SAAUA,IACjF,cAAC,EAAD,CAAUA,SAAYA,EAAUD,MAAOA,QCT7C2B,IAASC,OACP,cAAC,IAAMC,WAAP,UACE,cAAC,EAAD,MAEFC,SAASC,eAAe,W","file":"static/js/main.efc0404f.chunk.js","sourcesContent":["import React from 'react';\r\n\r\nconst Form = ({inputText,setInputText, todos, setTodos}) =>  {\r\n    const inputTextHandler = (e) =>{\r\n        console.log(e.target.value)\r\n        setInputText(e.target.value)\r\n    }\r\n\r\n    const submitTodoHandler = (e) =>{\r\n        e.preventDefault() // To prevent the app from refreshing after submit\r\n        setTodos([\r\n            ...todos, {text: inputText, completed: false, id: Math.random()*1000}\r\n        ])\r\n        setInputText(\"\") // To reset the state empty\r\n    }\r\n    return (\r\n    <form>\r\n\r\n      <input value={inputText} onChange={inputTextHandler} type=\"text\" className=\"todo-input\" />\r\n\r\n      <button onClick={submitTodoHandler} className=\"todo-button\" type=\"submit\">\r\n        <i className=\"fas fa-plus-square\"></i>\r\n      </button>\r\n\r\n      <div className=\"select\">\r\n\r\n        <select name=\"todos\" className=\"filter-todo\">\r\n          <option value=\"all\">All</option>\r\n          <option value=\"completed\">Completed</option>\r\n          <option value=\"uncompleted\">Uncompleted</option>\r\n        </select>\r\n\r\n      </div>\r\n\r\n    </form>\r\n    );\r\n    \r\n}\r\n\r\nexport default Form;","import React from 'react';\r\n\r\nconst Todo = ({text,todo, todos, setTodos}) => {\r\n    const deleteHandler = () =>{\r\n        setTodos(todos.filter((el)=>el.id !== todo.id))\r\n    }\r\n\r\n    const completeHandler = () =>{\r\n        setTodos(\r\n            todos.map((item) =>{\r\n                if(item.id === todo.id){\r\n                    return{\r\n                        ...item,\r\n                        completed: !item.completed\r\n                    }\r\n                }\r\n                return item\r\n            })\r\n        )\r\n    }\r\n    return (\r\n\r\n        <div className= \"todo\">\r\n\r\n            <li className = \"todo-item\">\r\n                {text}\r\n            </li>\r\n\r\n            <button onClick={completeHandler} className=\"complete-btn\">\r\n                <i className= \"fas fa-check\"></i>\r\n            </button>\r\n\r\n            <button onClick = {deleteHandler} className=\"trash-btn\">\r\n                <i className= \"fas fa-trash\"></i>\r\n            </button>\r\n\r\n        </div>\r\n    );\r\n};\r\n\r\nexport default Todo;","import React from 'react';\r\nimport Todo from \"./Todo\"\r\n\r\nconst TodoList = ({todos, setTodos}) => {\r\n    \r\n    return (\r\n\r\n        <div className=\"todo-container\">\r\n\r\n            <ul className=\"todo-list\">\r\n                {todos.map((todo) => {\r\n                   return <Todo \r\n                   key = {todo.id} \r\n                   text ={todo.text} \r\n                   setTodos = {setTodos} \r\n                   todos = {todos} \r\n                   todo = {todo}\r\n                   />\r\n                })}\r\n                \r\n            </ul>\r\n            \r\n        </div>\r\n    );\r\n};\r\n\r\nexport default TodoList;","import React, {useState} from 'react';\nimport './App.css';\nimport Form from './Components/Form';\nimport TodoList from './Components/TodoList';\n\nfunction App() {\n  const [inputText, setInputText] = useState(\"\")\n  const [todos, setTodos] = useState([])\n  return (\n    <div className=\"App\">\n      <header>\n        <h1>To do List</h1>\n      </header>\n      <Form inputText={inputText} setInputText= {setInputText} todos={todos} setTodos={setTodos}/>\n      <TodoList setTodos = {setTodos} todos={todos} />\n    </div>\n  );\n}\n\nexport default App;\n","import React from 'react';\nimport ReactDOM from 'react-dom';\nimport './index.css';\nimport App from './App';\n\nReactDOM.render(\n  <React.StrictMode>\n    <App />\n  </React.StrictMode>,\n  document.getElementById('root')\n);\n\n"],"sourceRoot":""}